##spring config
## DB Config

spring:
 shardingsphere:
  datasource:
   common:
    type: com.zaxxer.hikari.HikariDataSource
   names: ds0
   ds0:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: cheney@mysql
  rules:
   sharding:
    tables:
     sys_auth_user:
      actual-data-nodes: ds0.sys_auth_user_$->{2020..2100}${(1..12).collect{t ->t.toString().padLeft(2,'0')}}
      table-strategy:
       standard:
        sharding-column: create_date
        sharding-algorithm-name: year-month
    sharding-algorithms:
     year-month:
      algorithm-class-name: com.cheney.utils.YearMonthShardingAlgorithm
      type: year-month
      props:
       test: 1
    key-generators:
     uuid:
      type: UUID
      props:
       test: 1
#     t_order:
#      actualDataNodes: ds$->{0..1}.t_order$->{0..2} #ds$->{0..1}.t_order$->{0..2}
#      databaseStrategy:
#       standard:
#        shardingColumn: user_id
#        preciseAlgorithmClassName: cn.com.bluemoon.config.MyDBPreciseShardingAlgorithm
#        rangeAlgorithmClassName: cn.com.bluemoon.config.MyDBRangeShardingAlgorithm
#      tableStrategy:
#       standard:
#        shardingColumn: order_id
#        # 分片算法表达式
#        preciseAlgorithmClassName: cn.com.bluemoon.config.MyTablePreciseShardingAlgorithm



 ## kafka
 kafka:
  bootstrap-servers: '192.168.99.100:9092'
  producer:
   acks: 1
   key-serializer: org.apache.kafka.common.serialization.StringSerializer
   value-serializer: org.apache.kafka.common.serialization.StringSerializer
  consumer:
   enable-auto-commit: false
   group-id: test
   value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
   key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  listener:
   ## 手动确认消费
   ack-mode: manual

 ## redis
 redis:
  host: 127.0.0.1
  port: 6379
#  cluster:
#   nodes:
#   - 127.0.0.1:6379
#   - xxx.x.x.x:xxxx
#  password: cheney@redis
  timeout: 100000ms
  jedis:
   pool:
    max-active: 1024
    max-idle: 200
    max-wait: 10000ms
  database: 0
 #rabbitmq
 rabbitmq:
  host:

#############################################################

##other config
## redis config
redis:
 throwRedisException: true

## mongodb config
mongodb:
 auth: false
 authBase: admin
 host: 127.0.0.1
 port:
 database: blog
 username: root
 password: cheney@mongo

toolbox:
 entity-cache:
  enable: false
  type: REDIS
  underline: true
  entityPaths: com.cheney.entity
  autoRefresh: true
  period: 1

my:
 sharding:
  startDate: 2020-01
  tableName: sys_auth_user
  dbname: ds0
